---
const textLinkss: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "About", href: "/about" },
  { label: "Works", href: "/works" },
  { label: "Blog", href: "/blog" },
];

const { textLinks = [] } = Astro.props;
---

<div
  class:list={[
    "right-0 z-30 top-0 flex h-16 w-full justify-center bg-opacity-90 backdrop-blur transition-all duration-100 bg-base-100 text-base-content shadow-sm",
    ,
    { fixed: Astro.url.pathname === "/", sticky: Astro.url.pathname !== "/" },
  ]}
>
  <div class="navbar">
    <div class="navbar-start"></div>
    <div class="navbar-center gap-1 max-md:invisible">
      {
        textLinks.map(({ label, href }) => (
          <a
            aria-current={Astro.url.pathname === href}
            class:list={[
              "btn btn-ghost normal-case",
              {
                "btn-active":
                  Astro.url.pathname === href ||
                  (href !== "/" && Astro.url.pathname.startsWith(href)),
              },
            ]}
            href={href}
          >
            {label}
          </a>
        ))
      }
    </div>
    <div class="navbar-end md:invisible">
      <label for="my-drawer" class="btn btn-square btn-ghost">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          class="inline-block w-5 h-5 stroke-current"
          ><path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </label>
    </div>
  </div>
</div>
